# Generated by Django 3.2.10 on 2021-12-09 17:36

import django.contrib.sites.managers
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import edc_visit_tracking.managers


class Migration(migrations.Migration):

    dependencies = [
        ('mocca_subject', '0022_auto_20210413_1942'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='bloodresultslipid',
            managers=[
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
                ('objects', edc_visit_tracking.managers.CrfModelManager()),
            ],
        ),
        migrations.RenameField(
            model_name='bloodresultslipid',
            old_name='lipid_assay_datetime',
            new_name='assay_datetime',
        ),
        migrations.RenameField(
            model_name='bloodresultslipid',
            old_name='hdl',
            new_name='hdl_value',
        ),
        migrations.RenameField(
            model_name='bloodresultslipid',
            old_name='ldl',
            new_name='ldl_value',
        ),
        migrations.RenameField(
            model_name='bloodresultslipid',
            old_name='trig',
            new_name='trig_value',
        ),
        migrations.RenameField(
            model_name='historicalbloodresultslipid',
            old_name='lipid_assay_datetime',
            new_name='assay_datetime',
        ),
        migrations.RenameField(
            model_name='historicalbloodresultslipid',
            old_name='hdl',
            new_name='hdl_value',
        ),
        migrations.RenameField(
            model_name='historicalbloodresultslipid',
            old_name='ldl',
            new_name='ldl_value',
        ),
        migrations.RenameField(
            model_name='historicalbloodresultslipid',
            old_name='lipid_requisition',
            new_name='requisition',
        ),
        migrations.RenameField(
            model_name='historicalbloodresultslipid',
            old_name='trig',
            new_name='trig_value',
        ),
        migrations.RemoveField(
            model_name='bloodresultslipid',
            name='chol',
        ),
        migrations.RemoveField(
            model_name='bloodresultslipid',
            name='lipid_requisition',
        ),
        migrations.RemoveField(
            model_name='glucose',
            name='glucose_assay_datetime',
        ),
        migrations.RemoveField(
            model_name='glucose',
            name='glucose_requisition',
        ),
        migrations.RemoveField(
            model_name='historicalbloodresultslipid',
            name='chol',
        ),
        migrations.RemoveField(
            model_name='historicalglucose',
            name='glucose_assay_datetime',
        ),
        migrations.RemoveField(
            model_name='historicalglucose',
            name='glucose_requisition',
        ),
        migrations.RemoveField(
            model_name='historicalglucosebaseline',
            name='glucose_assay_datetime',
        ),
        migrations.RemoveField(
            model_name='historicalglucosebaseline',
            name='glucose_requisition',
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='chol_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='chol_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='chol_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(999.0)], verbose_name='Total Cholesterol'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='hdl_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='hdl_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='ldl_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='ldl_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='requisition',
            field=models.ForeignKey(blank=True, help_text='Start typing the requisition identifier or select one from this visit', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='mocca_subject.subjectrequisition', verbose_name='Requisition'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='trig_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='bloodresultslipid',
            name='trig_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='glucose',
            name='glucose_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='glucose',
            name='glucose_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='glucose',
            name='glucose_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9999.99)], verbose_name='Blood Glucose'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='chol_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='chol_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='chol_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(999.0)], verbose_name='Total Cholesterol'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='hdl_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='hdl_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='ldl_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='ldl_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='trig_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='historicalbloodresultslipid',
            name='trig_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='historicalglucose',
            name='glucose_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='historicalglucose',
            name='glucose_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='historicalglucose',
            name='glucose_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9999.99)], verbose_name='Blood Glucose'),
        ),
        migrations.AddField(
            model_name='historicalglucosebaseline',
            name='glucose_grade',
            field=models.IntegerField(blank=True, choices=[(0, 'Not graded'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], null=True, verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='historicalglucosebaseline',
            name='glucose_grade_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Grade description'),
        ),
        migrations.AddField(
            model_name='historicalglucosebaseline',
            name='glucose_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9999.99)], verbose_name='Blood Glucose'),
        ),
        migrations.AlterField(
            model_name='bloodresultslipid',
            name='tracking_identifier',
            field=models.CharField(max_length=32, unique=True),
        ),
        migrations.AlterField(
            model_name='glucose',
            name='fasting',
            field=models.CharField(choices=[('fasting', 'Fasting'), ('non_fasting', 'Non-fasting')], max_length=25, null=True, verbose_name='Was this fasting or non-fasting?'),
        ),
        migrations.AlterField(
            model_name='glucose',
            name='glucose_quantifier',
            field=models.CharField(choices=[('=', '='), ('>', '>'), ('>=', '>='), ('<', '<'), ('<=', '<=')], default='=', max_length=10),
        ),
        migrations.AlterField(
            model_name='glucose',
            name='glucose_units',
            field=models.CharField(blank=True, choices=[('mg/dL', 'mg/dL'), ('mmol/L', 'mmol/L (millimoles/L)')], max_length=15, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='historicalbloodresultslipid',
            name='tracking_identifier',
            field=models.CharField(db_index=True, max_length=32),
        ),
        migrations.AlterField(
            model_name='historicalglucose',
            name='fasting',
            field=models.CharField(choices=[('fasting', 'Fasting'), ('non_fasting', 'Non-fasting')], max_length=25, null=True, verbose_name='Was this fasting or non-fasting?'),
        ),
        migrations.AlterField(
            model_name='historicalglucose',
            name='glucose_quantifier',
            field=models.CharField(choices=[('=', '='), ('>', '>'), ('>=', '>='), ('<', '<'), ('<=', '<=')], default='=', max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalglucose',
            name='glucose_units',
            field=models.CharField(blank=True, choices=[('mg/dL', 'mg/dL'), ('mmol/L', 'mmol/L (millimoles/L)')], max_length=15, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='historicalglucosebaseline',
            name='fasting',
            field=models.CharField(choices=[('fasting', 'Fasting'), ('non_fasting', 'Non-fasting')], max_length=25, null=True, verbose_name='Was this fasting or non-fasting?'),
        ),
        migrations.AlterField(
            model_name='historicalglucosebaseline',
            name='glucose_quantifier',
            field=models.CharField(choices=[('=', '='), ('>', '>'), ('>=', '>='), ('<', '<'), ('<=', '<=')], default='=', max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalglucosebaseline',
            name='glucose_units',
            field=models.CharField(blank=True, choices=[('mg/dL', 'mg/dL'), ('mmol/L', 'mmol/L (millimoles/L)')], max_length=15, null=True, verbose_name='units'),
        ),
    ]
